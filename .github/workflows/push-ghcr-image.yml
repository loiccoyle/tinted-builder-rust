name: Build and push latest GHCR Docker image
on:
  workflow_call:

jobs:
  push-image:
    name: Push latest image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get latest tag
        id: get-latest-tag
        run: |
          LATEST_TAG=$(git tag --list 'v[0-9]*.[0-9]*.[0-9]*' | sort -V | tail -n 1)
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV
          echo "Latest tag: ${LATEST_TAG}"

      - name: Verify LATEST_TAG
        run: echo "LATEST_TAG is ${{ env.LATEST_TAG }}"

      - name: Build Docker image
        run: docker build -t tinted-builder-rust .

      - name: Tag Docker image
        run: |
          docker tag tinted-builder-rust ghcr.io/tinted-theming/tinted-builder-rust:${{ env.LATEST_TAG }}
          docker tag ghcr.io/tinted-theming/tinted-builder-rust:${{ env.LATEST_TAG }} ghcr.io/tinted-theming/tinted-builder-rust:latest

      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.DOCKER_GHCR }} | docker login ghcr.io -u tinted-theming-bot --password-stdin

      - name: Push Docker image
        run: docker push ghcr.io/tinted-theming/tinted-builder-rust:${{ env.LATEST_TAG }}

      - name: Remove existing 'latest' tag
        run: |
          if git rev-parse latest >/dev/null 2>&1; then
            git tag -d latest
            git push origin :refs/tags/latest
          fi

      - name: Add 'latest' tag to LATEST_TAG commit
        run: |
          LATEST_TAG_COMMIT=$(git rev-list -n 1 ${{ env.LATEST_TAG }})
          git tag latest ${LATEST_TAG_COMMIT}
          git push origin latest
